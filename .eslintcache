[{"F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\index.js":"1","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\App.js":"2","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\reportWebVitals.js":"3","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\Loginpage.jsx":"4","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\RegisterPage.jsx":"5","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\HomePage.jsx":"6","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\ProfilePage.jsx":"7","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\PublicPage.jsx":"8","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\MyPage.jsx":"9"},{"size":329,"mtime":1610494526534,"results":"10","hashOfConfig":"11"},{"size":1224,"mtime":1610494492716,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606824500808,"results":"13","hashOfConfig":"11"},{"size":3680,"mtime":1610566765515,"results":"14","hashOfConfig":"11"},{"size":4560,"mtime":1610566892422,"results":"15","hashOfConfig":"11"},{"size":25194,"mtime":1610573812940,"results":"16","hashOfConfig":"11"},{"size":16910,"mtime":1610568791865,"results":"17","hashOfConfig":"11"},{"size":25265,"mtime":1610567076531,"results":"18","hashOfConfig":"11"},{"size":24264,"mtime":1610573017338,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1is1wrc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\index.js",[],["45","46"],"F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\App.js",["47","48","49"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport LoginPage from \"./components/Loginpage.jsx\";\nimport RegisterPage from \"./components/RegisterPage.jsx\";\nimport HomePage from \"./components/HomePage.jsx\";\nimport ProfilePage from \"./components/ProfilePage.jsx\";\nimport PublicPage from \"./components/PublicPage.jsx\";\nimport MyPage from \"./components/MyPage.jsx\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nclass App extends React.Component {\n  comonentDidMount() {\n\n    window.scrollTo(0, 0)\n  }\n  render() {\n    return (\n      <Router >\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route exact path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/profile\">\n          <ProfilePage />\n        </Route>\n        <Route exact path=\"/public-posts\">\n          <PublicPage />\n        </Route>\n        <Route exact path=\"/my-posts\">\n          <MyPage />\n        </Route>\n      </Router>\n    );\n  }\n\n}\nexport default App;\n","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\reportWebVitals.js",[],"F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\Loginpage.jsx",["50","51","52","53"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect, Route, Link } from \"react-router-dom\";\r\nimport \"../styles/login.css\";\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner'\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport {\r\n  Button,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Container,\r\n} from 'reactstrap';\r\nclass Loginpage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\", // Email\r\n      password: \"\", // Password\r\n      spinner: false, // Spinner\r\n      swal: false, // Sweet Alert\r\n    }\r\n    this.login = this.login.bind(this); // Login function\r\n  }\r\n  comonentDidMount() {\r\n    localStorage.clear()\r\n    window.scrollTo(0, 0)\r\n  }\r\n\r\n  login = async () => {\r\n    this.setState({ spinner: true })\r\n    await axios.post('http://localhost:3333/auth/login', {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }).then(response => {\r\n      if (response.data.message === \"Login success :)\") {\r\n        console.log(response.data.data.user)\r\n        localStorage.setItem(\"token_social_media\", response.data.token);\r\n        localStorage.setItem(\"userId\", response.data.data.user.id);\r\n        localStorage.setItem(\"userName\", response.data.data.user.userName);\r\n        localStorage.setItem(\"profileImage\", response.data.data.user.profileImage);\r\n      }\r\n      window.location.href = '/'\r\n      this.setState({ spinner: false })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      this.setState({ spinner: false })\r\n      this.setState({ swal: true })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.state.spinner === true ?\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#004E8E\"\r\n              height={100}\r\n              width={100}\r\n              style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            />\r\n            :\r\n            <Row>\r\n              <Col xl={5} lg={8} md={8} style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 15px rgba(0,0,0,0.15)'\r\n              }}>\r\n                <center>\r\n                  <h3 style={{ marginTop: '2%' }}>Sign In</h3></center>\r\n                <CardBody>\r\n                  <FormGroup>\r\n                    <Label >Email</Label>\r\n                    <Input type=\"email\" placeholder=\"john@gmail.com\" onChange={(event) => this.setState({ email: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label >Password</Label>\r\n                    <Input type=\"password\" placeholder=\"password\" onChange={(event) => this.setState({ password: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <center> <Button color=\"success\" onClick={this.login}>Login</Button></center>\r\n                  <p className=\"text-right\">\r\n                    New User  <Link to='/register' >Register </Link>\r\n                  </p>\r\n                </CardBody>\r\n              </Col>\r\n              <SweetAlert\r\n                error\r\n                show={this.state.swal}\r\n                title=\"Please enter valid credentials\"\r\n                onConfirm={() => this.setState({ swal: false })}\r\n              >\r\n              </SweetAlert>\r\n            </Row>\r\n          }\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loginpage;\r\n","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\RegisterPage.jsx",["54"],"import React from \"react\";\r\nimport { BrowserRouter as Link } from \"react-router-dom\";\r\nimport \"../styles/login.css\";\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner'\r\nimport FileBase64 from 'react-file-base64';\r\nimport {\r\n  Button,\r\n  CardBody,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Row,\r\n  Container,\r\n} from 'reactstrap';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nclass Registerpage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\", // Email\r\n      password: \"\", // Password\r\n      userName: \"\", // Username\r\n      mobileNumber: \"\", // Mobile Number\r\n      spinner: false, // Spinner\r\n      swal: false, // Sweet Alert\r\n      profileImage: [] // Profile Image\r\n    }\r\n    this.register = this.register.bind(this); // Register Function\r\n  }\r\n  comonentDidMount() {\r\n    window.scrollTo(0, 0)\r\n  }\r\n  register = async () => {\r\n    this.setState({ spinner: true })\r\n    await axios.post('http://localhost:3333/auth/register', {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      userName: this.state.userName,\r\n      mobileNumber: this.state.mobileNumber,\r\n      profileImage: this.state.profileImage\r\n    }).then(response => {\r\n      window.location.href = '/login'\r\n      this.setState({ spinner: false })\r\n    }).catch(err => {\r\n      console.log(err);\r\n      this.setState({ spinner: false })\r\n      this.setState({ swal: true })\r\n    })\r\n  }\r\n  getFiles(files) {\r\n    this.setState({ profileImage: files.base64 })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.state.spinner === true ?\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#004E8E\"\r\n              height={100}\r\n              width={100}\r\n              style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)'\r\n              }}\r\n            />\r\n            :\r\n            <Row>\r\n              <Col xl={5} lg={8} md={8} style={{\r\n                position: 'absolute', left: '50%', top: '50%',\r\n                transform: 'translate(-50%, -50%)', boxShadow: '0px 0px 15px rgba(0,0,0,0.15)'\r\n              }}>\r\n                <center>\r\n                  <h3 style={{ marginTop: '2%' }}>Sign Up</h3></center>\r\n                <CardBody>\r\n                  <FormGroup>\r\n                    <Label >Email</Label>\r\n                    <Input type=\"email\" placeholder=\"john@gmail.com\" onChange={(event) => this.setState({ email: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label >User Name</Label>\r\n                    <Input type=\"text\" placeholder=\"Johnson\" onChange={(event) => this.setState({ userName: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label >Password</Label>\r\n                    <Input type=\"password\" placeholder=\"password\" onChange={(event) => this.setState({ password: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label >Mobile Number</Label>\r\n                    <Input type=\"text\" placeholder=\"9632587410\" onChange={(event) => this.setState({ mobileNumber: event.target.value })} style={{ backgroundColor: '#F0F5FB' }} />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <Label >Profile Picture</Label>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        <FileBase64 id=\"profileImage\" name=\"profileImage\" required onDone={this.getFiles.bind(this)} />\r\n                  </FormGroup>\r\n                  <center> <Button color=\"success\" onClick={this.register}>Register</Button></center>\r\n                  <p className=\"text-right\">\r\n                    Already User   <Button onClick={() => { window.location.href = '/login' }} style={{ backgroundColor: 'transparent', color: '#1E70BF', borderColor: 'transparent' }}>Login </Button>\r\n                  </p>\r\n                </CardBody>\r\n                <SweetAlert\r\n                  error\r\n                  show={this.state.swal}\r\n                  title=\"Please enter valid details\"\r\n                  onConfirm={() => this.setState({ swal: false })}\r\n                >\r\n                </SweetAlert>\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Registerpage;\r\n","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\HomePage.jsx",["55","56","57","58"],"import React, { useState } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\nimport logo from './images/logo.png'\r\nimport FileBase64 from 'react-file-base64';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Heart from \"react-animated-heart\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavbarText,\r\n    Container,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Badge\r\n} from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false, // Navbar Open Close\r\n            commentSectionView: false, // Comments section open close\r\n            data: [],// get user data\r\n            postsData: [], // Posts Data\r\n            userComment: '', //User Comments\r\n            userPostImage: [],// Users Posts Image\r\n            userPostTitle: '',// Users Posts Title\r\n            userPostDescription: '', // Users Posts Description\r\n            modal: false, // Modal\r\n            spinner: false, //Spinner\r\n            swal: false, // Sweet Alert\r\n            postsEmpty: false, //Checks for post empty or not\r\n            profileImage: [], // User Profile Image\r\n            postsMode: false,  // Post Mode (Public or Private)\r\n            usersData: [], // Get users Data\r\n            commentsID: '',// Users Comments ID\r\n        }\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggle1 = this.toggle1.bind(this);\r\n        this.toggle3 = this.toggle3.bind(this);\r\n        this.toggle2 = this.toggle2.bind(this);\r\n        this.getDetails = this.getDetails.bind(this);\r\n        this.comment = this.comment.bind(this);\r\n        this.toggleChange = this.toggleChange.bind(this);\r\n        this.save = this.save.bind(this);\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n    componentWillMount() {\r\n\r\n        window.scrollTo(0, 0);\r\n        this.getDetails();\r\n    }\r\n    async getDetails() {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        var userId = localStorage.getItem(\"userId\");\r\n        const data = {\r\n            userId: userId\r\n        }\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/friendsPosts\", data, { headers })\r\n            .then(async dataObj => {\r\n                this.setState({ postsData: dataObj.data.data })\r\n                console.log(this.state.postsData)\r\n                await axios.post(\"http://localhost:3333/auth/getUsers\", data, { headers })\r\n                    .then(async res => {\r\n                        for (var i = 0; i < res.data.data.length; i++) {\r\n                            if (res.data.data[i].userId == localStorage.getItem(\"userId\")) {\r\n                                res.data.data.splice(i, 1);\r\n                            }\r\n                        }\r\n                        console.log(res.data.data);\r\n                        this.setState({ usersData: res.data.data })\r\n                        this.setState({ postsEmpty: false });\r\n                        this.setState({ spinner: false })\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                        this.setState({ spinner: false })\r\n                        this.setState({ swal: true })\r\n                        this.setState({ postsEmpty: false });\r\n                    })\r\n            }).catch(err => {\r\n                console.log(err);\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n            })\r\n    }\r\n    toggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n    async comment(postId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        if (this.state.userComment.length == 0) {\r\n            this.setState({ swal: true })\r\n        }\r\n        else {\r\n            var token = localStorage.getItem(\"token_social_media\");\r\n            var userId = localStorage.getItem(\"userId\");\r\n            var userName = localStorage.getItem(\"userName\");\r\n            var profileImage = localStorage.getItem(\"profileImage\");\r\n            var dt = new Date();\r\n            var hours = dt.getHours();\r\n            var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n            hours = (hours % 12) || 12;\r\n            var minutes = dt.getMinutes();\r\n            var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId,\r\n                comments: this.state.userComment,\r\n                userName: userName,\r\n                commentedAt: finalTime,\r\n                profileImage: profileImage\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            axios.post(\"http://localhost:3333/post/addComment\", data, { headers }\r\n            ).then(res => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ postsEmpty: false });\r\n                this.getDetails();\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n                this.getDetails();\r\n            })\r\n        }\r\n    }\r\n    toggleChange = async (postId, value) => {\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ spinner: true })\r\n        var userId = localStorage.getItem(\"userId\");\r\n        var token = localStorage.getItem(\"token_social_media\")\r\n        if (value === false) {\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/like\", data, { headers }).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                console.log(err)\r\n                this.setState({ swal: true })\r\n                this.getDetails();\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/unlike\", data, { headers }\r\n            ).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.getDetails();\r\n                console.log(err)\r\n            }\r\n            )\r\n\r\n        }\r\n    }\r\n    getFiles(files) {\r\n        this.setState({ userPostImage: files.base64 })\r\n\r\n    }\r\n    toggle1() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    async save() {\r\n        console.log(this.state.postsMode)\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ modal: false })\r\n        let token = localStorage.getItem(\"token_social_media\")\r\n        var dt = new Date();\r\n        var hours = dt.getHours();\r\n        var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n        hours = (hours % 12) || 12;\r\n        var minutes = dt.getMinutes();\r\n        var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const data = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            userPostTitle: this.state.userPostTitle,\r\n            userPostDescription: this.state.userPostDescription,\r\n            userPostImage: this.state.userPostImage,\r\n            postedAt: finalTime,\r\n            userName: localStorage.getItem(\"userName\"),\r\n            private: this.state.postsMode\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/uploadPost\", data, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    profile() {\r\n        window.location.href = '/profile';\r\n    }\r\n\r\n    toggle2() {\r\n        window.location.href = '/public-posts';\r\n    }\r\n    toggle3() {\r\n        window.location.href = '/my-posts';\r\n    }\r\n    logout() {\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n    }\r\n    async check(e) {\r\n        await this.setState({ postsMode: e })\r\n    }\r\n    async follow(friendsId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        let token = localStorage.getItem(\"token_social_media\");\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const data = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            friendsId: friendsId,\r\n\r\n        }\r\n        await axios.post(\"http://localhost:3333/auth/follow\", data, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    viewComments(postId) {\r\n        console.log(postId)\r\n        this.setState({ commentSectionView: !this.state.commentSectionView, commentsID: postId })\r\n    }\r\n    render() {\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        if (!token) {\r\n            window.location.href = '/login';\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />&nbsp;&nbsp;\r\n        <NavbarBrand href=\"/\">Social Media</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle} />\r\n                    <SweetAlert\r\n                        error\r\n                        show={this.state.swal}\r\n                        title=\"Something went wrong, Please logout and login again\"\r\n                        onConfirm={() => this.setState({ swal: false })}\r\n                    >\r\n                    </SweetAlert>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar >\r\n                        </Nav>\r\n\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.toggle2}>Public Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.toggle3}>My Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.toggle1}>Upload Post</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.profile}>Profile</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.logout}>Logout</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </Collapse>\r\n                </Navbar>\r\n                <Container>\r\n                    <Row>\r\n                        <Modal isOpen={this.state.modal} toggle={this.toggle1} size=\"lg\">\r\n                            <ModalHeader xl={8} lg={12} md={12} toggle={this.toggle1}>Upload Post</ModalHeader>\r\n                            <ModalBody>\r\n                                <Form>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            PostTitle\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Post Title\"\r\n                                                value={this.state.userPostTitle}\r\n                                                onChange={(event) => this.setState({ userPostTitle: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            Post Description\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"textarea\"\r\n                                                placeholder=\"Post Description\"\r\n                                                value={this.state.userPostDescription}\r\n                                                onChange={(event) => this.setState({ userPostDescription: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>Post Image</Label>\r\n                                        <Col sm={7}>\r\n                                            <FileBase64 id=\"profileImage\" name=\"profileImage\" required onDone={this.getFiles.bind(this)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={5}>\r\n                                        </Label>\r\n                                        <Col sm={7}>\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n\r\n                                                value={this.state.postsMode}\r\n                                                onChange={(e) => this.check(e.target.checked)} />Private Post\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color='success' onClick={this.save}>Save{' '}</Button>\r\n                                <Button color='secondary' onClick={this.toggle1}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        {this.state.spinner === true ?\r\n                            <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#004E8E\"\r\n                                height={100}\r\n                                width={100}\r\n                                style={{\r\n                                    position: 'absolute', left: '50%', top: '50%',\r\n                                    transform: 'translate(-50%, -50%)'\r\n                                }}\r\n                            />\r\n                            :\r\n                            <Col xl={12} lg={12} md={12} >\r\n                                <div class=\"gtco-testimonials\">\r\n                                    <h2>Posts</h2>\r\n                                    <Row>\r\n                                        {this.state.usersData.map((data, index) => (\r\n                                            <Col xl={3} lg={3} md={4} >\r\n\r\n                                                <div style={{ marginTop: '4%', marginBottom: '2%' }}>\r\n                                                    <div class=\"card text-center\"><img class=\"card-img-top\" style={{ maxWidth: '50px', borderRadius: '50%', margin: '15px auto 0', boxShadow: '0 8px 20px -4px #95abbb', width: '50px', height: '50px' }} key={index} src={data.profileImage} alt=\"\" />\r\n                                                        <div class=\"card-body\">\r\n                                                            <h5 key={index} >{data.userName} <br />\r\n                                                                <Button style={{ backgroundColor: '#004E8E', color: '#fff' }} onClick={this.follow.bind(this, data.userId)} >+{' '}Follow</Button>\r\n                                                            </h5>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n                                    <span>\r\n                                        {this.state.postsData.length === 0 ?\r\n                                            <p style={{\r\n                                                position: 'absolute', left: '50%', marginTop: '10%',\r\n                                                transform: 'translate(-50%, -50%)', fontSize: '26px'\r\n                                            }}> No Post found</p>\r\n                                            : <span>\r\n\r\n                                                {this.state.postsData.map(\r\n                                                    ({ userName, userPostImage, userPostTitle, userPostDescription, likedUsersId, postId, commentsUsersID }) => (\r\n                                                        <Row>\r\n                                                            <Col xl={1} lg={1} md={12} ></Col>\r\n                                                            <Col xl={10} lg={10} md={12} >\r\n                                                                <div style={{ marginTop: '2%', marginBottom: '2%' }}>\r\n                                                                    <div class=\"card text-center\"><img class=\"card-img-top\" src={userPostImage} alt=\"\" />\r\n                                                                        <div class=\"card-body\">\r\n                                                                            <h5  >{userName} <br />\r\n                                                                                <span style={{ fontWeight: '700', color: 'black' }}> {userPostTitle}</span>\r\n                                                                            </h5>\r\n                                                                            <p class=\"card-text\" style={{ fontSize: '14px' }}>{userPostDescription} </p>\r\n                                                                        </div>\r\n                                                                        <div >\r\n                                                                            <span style={{ float: 'left' }}>\r\n                                                                                <Heart isClick={likedUsersId.includes(localStorage.getItem(\"userId\"))} onClick={this.toggleChange.bind(this, postId, likedUsersId.includes(localStorage.getItem(\"userId\")))}  >\r\n\r\n                                                                                </Heart> </span> <span style={{ float: 'left', marginTop: '5%' }}> {likedUsersId.length} Likes</span>\r\n                                                                            <p style={{ float: 'right', marginTop: '4%', cursor: 'pointer' }} onClick={this.viewComments.bind(this, postId)}><Badge color=\"secondary\">{commentsUsersID.length}</Badge> {' '}View Comments</p>\r\n                                                                        </div>\r\n                                                                        {postId === this.state.commentsID ?\r\n                                                                            <div>\r\n                                                                                {this.state.commentSectionView === true ?\r\n                                                                                    <Comment.Group>\r\n                                                                                        {commentsUsersID.map(\r\n                                                                                            ({ comments, userName, commentedAt, profileImage }) => (\r\n                                                                                                <div>\r\n                                                                                                    <Comment style={{ float: 'left' }}>\r\n                                                                                                        <Comment.Avatar src={profileImage} />\r\n                                                                                                        <Comment.Content >\r\n                                                                                                            <Comment.Author as='a' >{userName}</Comment.Author>\r\n                                                                                                            <Comment.Metadata>\r\n                                                                                                                <div>{commentedAt}</div>\r\n                                                                                                            </Comment.Metadata>\r\n                                                                                                            <Comment.Text>{comments}</Comment.Text>\r\n                                                                                                        </Comment.Content>\r\n                                                                                                    </Comment><br /><br /><br />\r\n                                                                                                    <br />\r\n                                                                                                </div>\r\n                                                                                            ))}\r\n                                                                                        <div style={{ marginTop: '5%' }}>\r\n                                                                                            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" style={{ backgroundColor: '#F0F5FB', borderColor: '#000' }} onChange={(event) => this.setState({ userComment: event.target.value })} />\r\n                                                                                            <Button content='Add Comment' labelPosition='left' icon='edit' primary style={{ marginTop: '4%', marginBottom: '2%' }} onClick={this.comment.bind(this, postId)} />\r\n                                                                                        </div>\r\n                                                                                    </Comment.Group>\r\n                                                                                    : null}\r\n                                                                            </div>\r\n                                                                            : null}\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </Col>\r\n\r\n                                                        </Row>\r\n                                                    ))\r\n                                                }\r\n                                            </span>\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\ProfilePage.jsx",[],"F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\PublicPage.jsx",["59","60","61","62"],"import React, { useState } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\nimport logo from './images/logo.png'\r\nimport FileBase64 from 'react-file-base64';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Heart from \"react-animated-heart\";\r\nimport { Col, FormGroup, Input, Label, Row, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavbarText, Container, Modal, ModalHeader, ModalBody, ModalFooter, Badge } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false, // Navbar Open Close\r\n            commentSectionView: false, // Comments section open close\r\n            postsData: [], // Posts Data\r\n            userComment: '', //User Comments\r\n            userPostImage: [], // Users Posts Image\r\n            userPostTitle: '', // Users Posts Title\r\n            userPostDescription: '', // Users Posts Description\r\n            modal: false, // Modal\r\n            spinner: false, // Spinner\r\n            swal: false, // Sweet Alert\r\n            postsEmpty: false, //Checks for post empty or not\r\n            profileImage: [], // User Profile Image\r\n            postsMode: false, // Post Mode (Public or Private)\r\n            followersList: [], // Followers List\r\n            usersCommentId: '' // Users Comments ID\r\n        }\r\n\r\n        this.navbarToggle = this.navbarToggle.bind(this); // Navbar Toggle Function\r\n        this.redirectMyPosts = this.redirectMyPosts.bind(this); // Redirect to my posts function\r\n        this.redirectHome = this.redirectHome.bind(this); // Redirect to home function\r\n        this.modalToggle = this.modalToggle.bind(this); // Modal Toggle function\r\n        this.getPrimaryDetails = this.getPrimaryDetails.bind(this); // Runs first to excute API\r\n        this.comment = this.comment.bind(this); // Comments function\r\n        this.likeButton = this.likeButton.bind(this); // Like button function\r\n        this.uploadPost = this.uploadPost.bind(this); // upload post function\r\n        this.logout = this.logout.bind(this) // Logout function\r\n    }\r\n    componentWillMount() {\r\n\r\n        window.scrollTo(0, 0);\r\n        this.getPrimaryDetails();\r\n    }\r\n    viewComments(postId) {\r\n        console.log(postId)\r\n        this.setState({ commentSectionView: !this.state.commentSectionView, usersCommentId: postId })\r\n    }\r\n    async getPrimaryDetails() {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        var userId = localStorage.getItem(\"userId\");\r\n        const body = {\r\n            userId: userId\r\n        }\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        await axios.get(\"http://localhost:3333/post/getPosts\", { headers })\r\n            .then(async dataObj => {\r\n                this.setState({ postsData: dataObj.data.data })\r\n                await axios.post(\"http://localhost:3333/auth/getUsers\", body, { headers })\r\n                    .then(async res => {\r\n                        console.log(res.data)\r\n                        for (var i = 0; i < res.data.data.length; i++) {\r\n                            if (res.data.data[i].userId == localStorage.getItem(\"userId\")) {\r\n                                res.data.data.splice(i, 1);\r\n                            }\r\n                        }\r\n                        console.log(res.data.data);\r\n                        this.setState({ followersList: res.data.data })\r\n                        this.setState({ postsEmpty: false });\r\n                        this.setState({ spinner: false })\r\n\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                        this.setState({ spinner: false })\r\n                        this.setState({ swal: true })\r\n                        this.setState({ postsEmpty: false });\r\n                    })\r\n            }).catch(err => {\r\n                console.log(err);\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n            })\r\n    }\r\n    navbarToggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n    async comment(postId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        if (this.state.userComment.length == 0) {\r\n            this.setState({ swal: true })\r\n        }\r\n        else {\r\n            var token = localStorage.getItem(\"token_social_media\");\r\n            var userId = localStorage.getItem(\"userId\");\r\n            var userName = localStorage.getItem(\"userName\");\r\n            var profileImage = localStorage.getItem(\"profileImage\");\r\n            var dt = new Date();\r\n            var hours = dt.getHours();\r\n            var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n            hours = (hours % 12) || 12;\r\n            var minutes = dt.getMinutes();\r\n            var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n            const body = {\r\n                userId: userId,\r\n                postId: postId,\r\n                comments: this.state.userComment,\r\n                userName: userName,\r\n                commentedAt: finalTime,\r\n                profileImage: profileImage\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            axios.post(\"http://localhost:3333/post/addComment\", body, { headers }\r\n            ).then(res => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ postsEmpty: false });\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n                this.getPrimaryDetails();\r\n            })\r\n        }\r\n    }\r\n    likeButton = async (postId, value) => {\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ spinner: true })\r\n        var userId = localStorage.getItem(\"userId\");\r\n        var token = localStorage.getItem(\"token_social_media\")\r\n        if (value === false) {\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            const body = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/like\", body, { headers }).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                console.log(err)\r\n                this.setState({ swal: true })\r\n                this.getPrimaryDetails();\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            const body = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/unlike\", body, { headers }\r\n            ).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.getPrimaryDetails();\r\n                console.log(err)\r\n            }\r\n            )\r\n\r\n        }\r\n    }\r\n    getFiles(files) {\r\n        this.setState({ userPostImage: files.base64 })\r\n\r\n    }\r\n    modalToggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n    async uploadPost() {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ modal: false })\r\n        let token = localStorage.getItem(\"token_social_media\")\r\n        var dt = new Date();\r\n        var hours = dt.getHours();\r\n        var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n        hours = (hours % 12) || 12;\r\n        var minutes = dt.getMinutes();\r\n        var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const body = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            userPostTitle: this.state.userPostTitle,\r\n            userPostDescription: this.state.userPostDescription,\r\n            userPostImage: this.state.userPostImage,\r\n            postedAt: finalTime,\r\n            userName: localStorage.getItem(\"userName\"),\r\n            private: this.state.postsMode\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/uploadPost\", body, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getPrimaryDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    profile() {\r\n        window.location.href = '/profile';\r\n    }\r\n    logout() {\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n    }\r\n    async mode(e) {\r\n        await this.setState({ postsMode: e })\r\n    }\r\n    async follow(friendsId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        let token = localStorage.getItem(\"token_social_media\");\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const body = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            friendsId: friendsId,\r\n\r\n        }\r\n        await axios.post(\"http://localhost:3333/auth/follow\", body, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getPrimaryDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    redirectHome() {\r\n        window.location.href = '/';\r\n    }\r\n    redirectMyPosts() {\r\n        window.location.href = '/my-posts';\r\n    }\r\n    render() {\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        if (!token) {\r\n            window.location.href = '/login';\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />&nbsp;&nbsp;\r\n        <NavbarBrand href=\"/\">Social Media</NavbarBrand>\r\n                    <NavbarToggler onClick={this.navbarToggle} />\r\n                    <SweetAlert\r\n                        error\r\n                        show={this.state.swal}\r\n                        title=\"Something went wrong, Please logout and login again\"\r\n                        onConfirm={() => this.setState({ swal: false })}\r\n                    >\r\n                    </SweetAlert>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar >\r\n                        </Nav>\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.redirectHome}>Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.redirectMyPosts}>My Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.modalToggle}>Upload Post</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.profile}>Profile</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.logout}>Logout</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </Collapse>\r\n                </Navbar>\r\n                <Container>\r\n                    <Row>\r\n                        <Modal isOpen={this.state.modal} toggle={this.modalToggle} size=\"lg\">\r\n                            <ModalHeader xl={8} lg={12} md={12} toggle={this.modalToggle}>Upload Post</ModalHeader>\r\n                            <ModalBody>\r\n                                <Form>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            PostTitle\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Post Title\"\r\n                                                value={this.state.userPostTitle}\r\n                                                onChange={(event) => this.setState({ userPostTitle: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            Post Description\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"textarea\"\r\n                                                placeholder=\"Post Description\"\r\n                                                value={this.state.userPostDescription}\r\n                                                onChange={(event) => this.setState({ userPostDescription: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>Post Image</Label>\r\n                                        <Col sm={7}>\r\n                                            <FileBase64 id=\"profileImage\" name=\"profileImage\" required onDone={this.getFiles.bind(this)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={5}>\r\n                                        </Label>\r\n                                        <Col sm={7}>\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n\r\n                                                value={this.state.postsMode}\r\n                                                onChange={(e) => this.mode(e.target.checked)}\r\n                                            />Private Post\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color='success' onClick={this.uploadPost}>Save{' '}</Button>\r\n                                <Button color='secondary' onClick={this.modalToggle}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        {this.state.spinner === true ?\r\n                            <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#004E8E\"\r\n                                height={100}\r\n                                width={100}\r\n                                style={{\r\n                                    position: 'absolute', left: '50%', top: '50%',\r\n                                    transform: 'translate(-50%, -50%)'\r\n                                }}\r\n                            />\r\n                            :\r\n                            <Col xl={12} lg={12} md={12} >\r\n                                <div class=\"gtco-testimonials\">\r\n                                    <h2>Posts</h2>\r\n                                    <Row>\r\n                                        {this.state.followersList.map((data, index) => (\r\n                                            <Col xl={3} lg={3} md={4} >\r\n\r\n                                                <div style={{ marginTop: '4%', marginBottom: '2%' }}>\r\n                                                    <div class=\"card text-center\"><img class=\"card-img-top\" style={{ maxWidth: '50px', borderRadius: '50%', margin: '15px auto 0', boxShadow: '0 8px 20px -4px #95abbb', width: '50px', height: '50px' }} key={index} src={data.profileImage} alt=\"\" />\r\n                                                        <div class=\"card-body\">\r\n                                                            <h5 key={index} >{data.userName} <br />\r\n                                                                <Button style={{ backgroundColor: '#004E8E', color: '#fff' }} onClick={this.follow.bind(this, data.userId)} >+{' '}Follow</Button>\r\n                                                            </h5>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n                                    <span>\r\n                                        {this.state.postsData.length === 0 ?\r\n                                            <p style={{\r\n                                                position: 'absolute', left: '50%', marginTop: '10%',\r\n                                                transform: 'translate(-50%, -50%)', fontSize: '26px'\r\n                                            }}> No Post found</p>\r\n                                            : <span>\r\n                                                {this.state.postsData.map((data, index) => (\r\n                                                    <Row>\r\n                                                        <Col xl={1} lg={1} md={12} ></Col>\r\n                                                        <Col xl={10} lg={10} md={12} >\r\n                                                            <div style={{ marginTop: '2%', marginBottom: '2%' }}>\r\n                                                                <div class=\"card text-center\"><img class=\"card-img-top\" key={index} src={data.userPostImage} alt=\"\" />\r\n                                                                    <div class=\"card-body\">\r\n                                                                        <h5 key={index} >{data.userName} <br />\r\n                                                                            <span style={{ fontWeight: '700', color: 'black' }}> {data.userPostTitle}</span>\r\n                                                                        </h5>\r\n                                                                        <p class=\"card-text\" style={{ fontSize: '14px' }} key={index}>{data.userPostDescription} </p>\r\n                                                                    </div>\r\n                                                                    <div >\r\n                                                                        <span style={{ float: 'left' }}>\r\n                                                                            <Heart isClick={data.likedUsersId.includes(localStorage.getItem(\"userId\"))} onClick={this.likeButton.bind(this, data.postId, data.likedUsersId.includes(localStorage.getItem(\"userId\")))}  >\r\n\r\n                                                                            </Heart> </span> <span style={{ float: 'left', marginTop: '5%' }}> {data.likedUsersId.length} Likes</span>\r\n                                                                        <p style={{ float: 'right', marginTop: '2%', cursor: 'pointer' }} key={index} onClick={this.viewComments.bind(this, data.postId)}><Badge color=\"secondary\">{data.commentsUsersID.length}</Badge> {' '}View Comments</p>\r\n                                                                    </div>\r\n                                                                    {data.postId === this.state.usersCommentId ?\r\n                                                                        <div>\r\n                                                                            {this.state.commentSectionView === true ?\r\n                                                                                <Comment.Group key={index}>\r\n                                                                                    {data.commentsUsersID.map(\r\n                                                                                        ({ comments, userName, commentedAt, profileImage }) => (\r\n                                                                                            <div>\r\n                                                                                                <Comment style={{ float: 'left' }}>\r\n                                                                                                    <Comment.Avatar key={index} src={profileImage} />\r\n                                                                                                    <Comment.Content >\r\n                                                                                                        <Comment.Author as='a' key={index}>{userName}</Comment.Author>\r\n                                                                                                        <Comment.Metadata>\r\n                                                                                                            <div key={index}>{commentedAt}</div>\r\n                                                                                                        </Comment.Metadata>\r\n                                                                                                        <Comment.Text key={index}>{comments}</Comment.Text>\r\n                                                                                                    </Comment.Content>\r\n                                                                                                </Comment><br /><br /><br />\r\n                                                                                                <br />\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    <div style={{ marginTop: '5%' }}>\r\n                                                                                        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(event) => this.setState({ userComment: event.target.value })} />\r\n                                                                                        <Button content='Add Comment' labelPosition='left' icon='edit' primary style={{ marginTop: '4%', marginBottom: '2%' }} onClick={this.comment.bind(this, data.postId)} />\r\n                                                                                    </div>\r\n                                                                                </Comment.Group>\r\n                                                                                : null}\r\n                                                                        </div>\r\n                                                                        : null}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))\r\n                                                }\r\n                                            </span>\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","F:\\Hyperverge\\Hyperverge Bootcamp\\Bootcamp1\\socail-media-app-frontend\\social-media\\src\\components\\MyPage.jsx",["63","64","65","66"],"import React, { useState } from \"react\";\r\nimport \"../styles/HomePage.css\";\r\nimport logo from './images/logo.png'\r\nimport FileBase64 from 'react-file-base64';\r\nimport Loader from 'react-loader-spinner';\r\nimport { Button, Comment, Form, Header } from 'semantic-ui-react';\r\nimport SweetAlert from 'react-bootstrap-sweetalert';\r\nimport Heart from \"react-animated-heart\";\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row,\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavbarText,\r\n    Container,\r\n    Modal, ModalHeader, ModalBody, ModalFooter,\r\n    Badge\r\n} from 'reactstrap';\r\nimport { FaTrash, FaRegTrashAlt } from 'react-icons/fa';\r\nimport axios from \"axios\";\r\n\r\nclass MyPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: false, // Navbar Open Close\r\n            commentSectionView: false, // Comments section open close\r\n            postsData: [], // Posts Data\r\n            userComment: '', //User Comments\r\n            userPostImage: [],// Users Posts Image\r\n            userPostTitle: '',// Users Posts Title\r\n            userPostDescription: '', // Users Posts Description\r\n            modal: false, // Modal\r\n            spinner: false, //Spinner\r\n            swal: false, // Sweet Alert\r\n            postsEmpty: false, //Checks for post empty or not\r\n            profileImage: [], // User Profile Image\r\n            postsMode: false, // Post Mode (Public or Private)\r\n            usersCommentId: ''// Users Comments ID\r\n        }\r\n\r\n        this.navbarToggle = this.navbarToggle.bind(this);  // Navbar Toggle Function\r\n        this.modalToggle = this.modalToggle.bind(this); // Modal Toggle function\r\n        this.redirectHome = this.redirectHome.bind(this); // Redirect home function\r\n        this.redirectPublicPosts = this.redirectPublicPosts.bind(this); // Redirect Public posts function\r\n        this.getPrimaryDetails = this.getPrimaryDetails.bind(this);// Runs first to excute API\r\n        this.comment = this.comment.bind(this); // Comments function\r\n        this.toggleChange = this.toggleChange.bind(this); // LikeButton\r\n        this.uploadPosts = this.uploadPosts.bind(this); // Upload Posts\r\n        this.logout = this.logout.bind(this); // Logout function\r\n        this.deletePosts = this.deletePosts.bind(this); // Delete Posts function \r\n    }\r\n    componentWillMount() {\r\n        window.scrollTo(0, 0);\r\n        this.getPrimaryDetails();\r\n    }\r\n    async getPrimaryDetails() {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        var userId = localStorage.getItem(\"userId\");\r\n        const data = {\r\n            userId: userId\r\n        }\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/myPosts\", data, { headers })\r\n            .then(async dataObj => {\r\n                this.setState({ postsData: dataObj.data.data })\r\n                this.setState({ postsEmpty: false });\r\n                this.setState({ spinner: false })\r\n            }).catch(err => {\r\n                console.log(err);\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n            })\r\n    }\r\n    navbarToggle = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n    viewComments(postId) {\r\n        console.log(postId)\r\n        this.setState({ commentSectionView: !this.state.commentSectionView, usersCommentId: postId })\r\n    }\r\n    async comment(postId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        if (this.state.userComment.length == 0) {\r\n            this.setState({ swal: true })\r\n        }\r\n        else {\r\n            var token = localStorage.getItem(\"token_social_media\");\r\n            var userId = localStorage.getItem(\"userId\");\r\n            var userName = localStorage.getItem(\"userName\");\r\n            var profileImage = localStorage.getItem(\"profileImage\");\r\n            var dt = new Date();\r\n            var hours = dt.getHours();\r\n            var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n            hours = (hours % 12) || 12;\r\n            var minutes = dt.getMinutes();\r\n            var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId,\r\n                comments: this.state.userComment,\r\n                userName: userName,\r\n                commentedAt: finalTime,\r\n                profileImage: profileImage\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            axios.post(\"http://localhost:3333/post/addComment\", data, { headers }\r\n            ).then(res => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ postsEmpty: false });\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                console.log(err)\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.setState({ postsEmpty: false });\r\n                this.getPrimaryDetails();\r\n            })\r\n        }\r\n    }\r\n    toggleChange = async (postId, value) => {\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ spinner: true })\r\n        var userId = localStorage.getItem(\"userId\");\r\n        var token = localStorage.getItem(\"token_social_media\")\r\n        if (value === false) {\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/like\", data, { headers }).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                console.log(err)\r\n                this.setState({ swal: true })\r\n                this.getPrimaryDetails();\r\n            }\r\n            )\r\n        }\r\n        else {\r\n            const data = {\r\n                userId: userId,\r\n                postId: postId\r\n            }\r\n            const headers = {\r\n                'content-type': 'application/json',\r\n                'x-access-token': token\r\n            }\r\n            await axios.post(\"http://localhost:3333/post/unlike\", data, { headers }\r\n            ).then(res => {\r\n\r\n                this.setState({ spinner: false })\r\n                this.getPrimaryDetails();\r\n            }).catch(err => {\r\n                this.setState({ spinner: false })\r\n                this.setState({ swal: true })\r\n                this.getPrimaryDetails();\r\n                console.log(err)\r\n            }\r\n            )\r\n\r\n        }\r\n    }\r\n    getFiles(files) {\r\n        this.setState({ userPostImage: files.base64 })\r\n    }\r\n    modalToggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    async uploadPosts() {\r\n        console.log(this.state.postsMode)\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        this.setState({ modal: false })\r\n        let token = localStorage.getItem(\"token_social_media\")\r\n        var dt = new Date();\r\n        var hours = dt.getHours();\r\n        var AmOrPm = hours >= 12 ? 'pm' : 'am';\r\n        hours = (hours % 12) || 12;\r\n        var minutes = dt.getMinutes();\r\n        var finalTime = hours + \":\" + minutes + \" \" + AmOrPm;\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const data = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            userPostTitle: this.state.userPostTitle,\r\n            userPostDescription: this.state.userPostDescription,\r\n            userPostImage: this.state.userPostImage,\r\n            postedAt: finalTime,\r\n            userName: localStorage.getItem(\"userName\"),\r\n            private: this.state.postsMode\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/uploadPost\", data, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getPrimaryDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    profile() {\r\n        window.location.href = '/profile';\r\n    }\r\n\r\n    redirectPublicPosts() {\r\n        window.location.href = '/public-posts';\r\n    }\r\n    redirectHome() {\r\n        window.location.href = '/';\r\n    }\r\n    logout() {\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n    }\r\n    async check(e) {\r\n        await this.setState({ postsMode: e })\r\n    }\r\n    async follow(friendsId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        let token = localStorage.getItem(\"token_social_media\");\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const data = {\r\n            userId: localStorage.getItem(\"userId\"),\r\n            friendsId: friendsId,\r\n        }\r\n        await axios.post(\"http://localhost:3333/auth/follow\", data, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getPrimaryDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    async deletePosts(postId) {\r\n        this.setState({ spinner: true })\r\n        this.setState({ postsEmpty: false });\r\n        let token = localStorage.getItem(\"token_social_media\");\r\n        const headers = {\r\n            'content-type': 'application/json',\r\n            'x-access-token': token\r\n        }\r\n        const data = {\r\n            postId: postId,\r\n        }\r\n        await axios.post(\"http://localhost:3333/post/deletePosts\", data, { headers }).then(res => {\r\n            this.setState({ spinner: false })\r\n            this.getPrimaryDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({ spinner: false })\r\n            this.setState({ swal: true })\r\n        })\r\n    }\r\n    render() {\r\n        var token = localStorage.getItem(\"token_social_media\");\r\n        if (!token) {\r\n            window.location.href = '/login';\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar color=\"light\" light expand=\"md\">\r\n                    <img\r\n                        alt=\"\"\r\n                        src={logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />&nbsp;&nbsp;\r\n        <NavbarBrand href=\"/\">Social Media</NavbarBrand>\r\n                    <NavbarToggler onClick={this.navbarToggle} />\r\n                    <SweetAlert\r\n                        error\r\n                        show={this.state.swal}\r\n                        title=\"Something went wrong, Please logout and login again\"\r\n                        onConfirm={() => this.setState({ swal: false })}\r\n                    >\r\n                    </SweetAlert>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar >\r\n                        </Nav>\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.redirectHome}>Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.redirectPublicPosts}>Public Posts</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.modalToggle}>Upload Post</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.profile}>Profile</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />\r\n                        <NavbarText style={{ cursor: 'pointer' }} onClick={this.logout}>Logout</NavbarText>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </Collapse>\r\n                </Navbar>\r\n                <Container>\r\n                    <Row>\r\n                        <Modal isOpen={this.state.modal} toggle={this.modalToggle} size=\"lg\">\r\n                            <ModalHeader xl={8} lg={12} md={12} toggle={this.modalToggle}>Upload Post</ModalHeader>\r\n                            <ModalBody>\r\n                                <Form>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            PostTitle\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder=\"Post Title\"\r\n                                                value={this.state.userPostTitle}\r\n                                                onChange={(event) => this.setState({ userPostTitle: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>\r\n                                            Post Description\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                type=\"textarea\"\r\n                                                placeholder=\"Post Description\"\r\n                                                value={this.state.userPostDescription}\r\n                                                onChange={(event) => this.setState({ userPostDescription: event.target.value })} style={{ backgroundColor: '#F0F5FB' }}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup row>\r\n                                        <Label sm={4}>Post Image</Label>\r\n                                        <Col sm={7}>\r\n                                            <FileBase64 id=\"profileImage\" name=\"profileImage\" required onDone={this.getFiles.bind(this)} />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                    <FormGroup row>\r\n                                        <Label sm={5}>\r\n                                        </Label>\r\n                                        <Col sm={7}>\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n\r\n                                                value={this.state.postsMode}\r\n                                                onChange={(e) => this.check(e.target.checked)} />Private Post\r\n                                        </Col>\r\n                                    </FormGroup>\r\n                                </Form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color='success' onClick={this.uploadPosts}>Save{' '}</Button>\r\n                                <Button color='secondary' onClick={this.modalToggle}>Cancel</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                        {this.state.spinner === true ?\r\n                            <Loader\r\n                                type=\"ThreeDots\"\r\n                                color=\"#004E8E\"\r\n                                height={100}\r\n                                width={100}\r\n                                style={{\r\n                                    position: 'absolute', left: '50%', top: '50%',\r\n                                    transform: 'translate(-50%, -50%)'\r\n                                }}\r\n                            />\r\n                            :\r\n                            <Col xl={12} lg={12} md={12} >\r\n                                <div class=\"gtco-testimonials\">\r\n                                    <h2>Posts</h2>\r\n                                    <span>\r\n                                        {this.state.postsData.length === 0 ?\r\n                                            <p style={{\r\n                                                position: 'absolute', left: '50%', marginTop: '10%',\r\n                                                transform: 'translate(-50%, -50%)', fontSize: '26px'\r\n                                            }}> No Post found</p>\r\n                                            : <span>\r\n                                                {this.state.postsData.map((data, index) => (\r\n                                                    <Row>\r\n                                                        <Col xl={1} lg={1} md={12} ></Col>\r\n                                                        <Col xl={10} lg={10} md={12} >\r\n                                                            <div style={{ marginTop: '2%', marginBottom: '2%' }}>\r\n\r\n                                                                <div class=\"card text-center\">\r\n\r\n                                                                    <img class=\"card-img-top\" key={index} src={data.userPostImage} alt=\"\" />\r\n                                                                    <div class=\"card-body\">\r\n                                                                        <h5 key={index} >{data.userName} <br />\r\n                                                                            <span style={{ fontWeight: '700', color: 'black' }}> {data.userPostTitle}</span>\r\n                                                                        </h5>\r\n                                                                        <p class=\"card-text\" style={{ fontSize: '14px' }} key={index}>{data.userPostDescription} </p>\r\n                                                                        <Button style={{ width: '15%', float: 'center', backgroundColor: 'transparent' }} key={index} onClick={this.deletePosts.bind(this, data.postId)}><FaRegTrashAlt style={{ color: 'red', fontSize: '24px' }} /></Button>\r\n                                                                    </div>\r\n\r\n                                                                    <div >\r\n                                                                        <span style={{ float: 'left' }}>\r\n                                                                            <Heart isClick={data.likedUsersId.includes(localStorage.getItem(\"userId\"))} onClick={this.toggleChange.bind(this, data.postId, data.likedUsersId.includes(localStorage.getItem(\"userId\")))}  >\r\n\r\n                                                                            </Heart> </span> <span style={{ float: 'left', marginTop: '5%' }}> {data.likedUsersId.length} Likes</span>\r\n                                                                        <p style={{ float: 'right', marginTop: '2%', cursor: 'pointer' }} key={index} onClick={this.viewComments.bind(this, data.postId)}><Badge color=\"secondary\">{data.commentsUsersID.length}</Badge> {' '}View Comments</p>\r\n                                                                    </div>\r\n                                                                    {data.postId === this.state.usersCommentId ?\r\n                                                                        <div>\r\n                                                                            {this.state.commentSectionView === true ?\r\n                                                                                <Comment.Group key={index}>\r\n                                                                                    {data.commentsUsersID.map(\r\n                                                                                        ({ comments, userName, commentedAt, profileImage }) => (\r\n                                                                                            <div>\r\n                                                                                                <Comment style={{ float: 'left' }}>\r\n                                                                                                    <Comment.Avatar key={index} src={profileImage} />\r\n                                                                                                    <Comment.Content >\r\n                                                                                                        <Comment.Author as='a' key={index}>{userName}</Comment.Author>\r\n                                                                                                        <Comment.Metadata>\r\n                                                                                                            <div key={index}>{commentedAt}</div>\r\n                                                                                                        </Comment.Metadata>\r\n                                                                                                        <Comment.Text key={index}>{comments}</Comment.Text>\r\n                                                                                                    </Comment.Content>\r\n                                                                                                </Comment><br /><br /><br />\r\n                                                                                                <br />\r\n                                                                                            </div>\r\n                                                                                        ))}\r\n                                                                                    <div style={{ marginTop: '5%' }}>\r\n                                                                                        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={(event) => this.setState({ userComment: event.target.value })} />\r\n                                                                                        <Button content='Add Comment' labelPosition='left' icon='edit' primary style={{ marginTop: '4%', marginBottom: '2%' }} onClick={this.comment.bind(this, data.postId)} />\r\n                                                                                    </div>\r\n                                                                                </Comment.Group>\r\n                                                                                : null}\r\n                                                                        </div>\r\n                                                                        : null}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                ))\r\n                                                }\r\n                                            </span>\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPage;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":35,"nodeType":"73","messageId":"74","endLine":2,"endColumn":41},{"ruleId":"71","severity":1,"message":"75","line":2,"column":50,"nodeType":"73","messageId":"74","endLine":2,"endColumn":54},{"ruleId":"71","severity":1,"message":"76","line":2,"column":56,"nodeType":"73","messageId":"74","endLine":2,"endColumn":64},{"ruleId":"71","severity":1,"message":"77","line":2,"column":27,"nodeType":"73","messageId":"74","endLine":2,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":2,"column":35,"nodeType":"73","messageId":"74","endLine":2,"endColumn":41},{"ruleId":"71","severity":1,"message":"76","line":2,"column":43,"nodeType":"73","messageId":"74","endLine":2,"endColumn":51},{"ruleId":"71","severity":1,"message":"78","line":2,"column":53,"nodeType":"73","messageId":"74","endLine":2,"endColumn":58},{"ruleId":"71","severity":1,"message":"75","line":2,"column":27,"nodeType":"73","messageId":"74","endLine":2,"endColumn":31},{"ruleId":"71","severity":1,"message":"79","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":6,"column":33,"nodeType":"73","messageId":"74","endLine":6,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":83,"column":57,"nodeType":"83","messageId":"84","endLine":83,"endColumn":59},{"ruleId":"81","severity":1,"message":"82","line":110,"column":43,"nodeType":"83","messageId":"84","endLine":110,"endColumn":45},{"ruleId":"71","severity":1,"message":"79","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":6,"column":33,"nodeType":"73","messageId":"74","endLine":6,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":71,"column":57,"nodeType":"83","messageId":"84","endLine":71,"endColumn":59},{"ruleId":"81","severity":1,"message":"82","line":99,"column":43,"nodeType":"83","messageId":"84","endLine":99,"endColumn":45},{"ruleId":"71","severity":1,"message":"79","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":6,"column":33,"nodeType":"73","messageId":"74","endLine":6,"endColumn":39},{"ruleId":"71","severity":1,"message":"85","line":25,"column":10,"nodeType":"73","messageId":"74","endLine":25,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":97,"column":43,"nodeType":"83","messageId":"84","endLine":97,"endColumn":45},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'useState' is defined but never used.","'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaTrash' is defined but never used.","no-global-assign","no-unsafe-negation"]